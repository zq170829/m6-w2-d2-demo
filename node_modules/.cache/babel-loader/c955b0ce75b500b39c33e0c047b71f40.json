{"ast":null,"code":"var _jsxFileName = \"/Users/qizhang/Desktop/westcliff/m6-w2-d2-demo/src/features/TodoListItem.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReactComponent as TimesSolid } from \"@svgr/webpack?-svgo,+titleProp,+ref!./times-solid.svg\";\nimport { availableColors, capitalize } from '../filters/colors';\nimport { todoColorSelected, todoDeleted, todoToggled, selectTodoById } from './todos/todosSlice'; // Destructure `props.id`, since we just need the ID value\n\nconst TodoListItem = _ref => {\n  let {\n    id\n  } = _ref;\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector(state => selectTodoById(state, id));\n  const {\n    text,\n    completed,\n    color\n  } = todo;\n  const dispatch = useDispatch();\n\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id));\n  };\n\n  const handleColorChanged = e => {\n    const color = e.target.value;\n    dispatch(todoColorSelected(todo.id, color));\n  };\n\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id));\n  };\n\n  const colorOptions = availableColors.map(c => /*#__PURE__*/React.createElement(\"option\", {\n    key: c,\n    value: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, capitalize(c)));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"toggle\",\n    type: \"checkbox\",\n    checked: completed,\n    onChange: handleCompletedChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, text)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"colorPicker\",\n    value: color,\n    style: {\n      color\n    },\n    onChange: handleColorChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), colorOptions), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"destroy\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimesSolid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default TodoListItem;","map":{"version":3,"sources":["/Users/qizhang/Desktop/westcliff/m6-w2-d2-demo/src/features/TodoListItem.js"],"names":["React","useSelector","useDispatch","availableColors","capitalize","todoColorSelected","todoDeleted","todoToggled","selectTodoById","TodoListItem","id","todo","state","text","completed","color","dispatch","handleCompletedChanged","handleColorChanged","e","target","value","onDelete","colorOptions","map","c"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAIA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,SACEC,iBADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,oBALP,C,CAOA;;AACA,MAAMC,YAAY,GAAG,QAAY;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC/B;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWJ,cAAc,CAACI,KAAD,EAAQF,EAAR,CAA1B,CAAxB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA6BJ,IAAnC;AAEA,QAAMK,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,sBAAsB,GAAG,MAAM;AACnCD,IAAAA,QAAQ,CAACT,WAAW,CAACI,IAAI,CAACD,EAAN,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMQ,kBAAkB,GAAIC,CAAD,IAAO;AAChC,UAAMJ,KAAK,GAAGI,CAAC,CAACC,MAAF,CAASC,KAAvB;AACAL,IAAAA,QAAQ,CAACX,iBAAiB,CAACM,IAAI,CAACD,EAAN,EAAUK,KAAV,CAAlB,CAAR;AACD,GAHD;;AAKA,QAAMO,QAAQ,GAAG,MAAM;AACrBN,IAAAA,QAAQ,CAACV,WAAW,CAACK,IAAI,CAACD,EAAN,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMa,YAAY,GAAGpB,eAAe,CAACqB,GAAhB,CAAqBC,CAAD,iBACvC;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,UAAU,CAACqB,CAAD,CADb,CADmB,CAArB;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAEX,SAHX;AAIE,IAAA,QAAQ,EAAEG,sBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BJ,IAA5B,CAPF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KAHT;AAIE,IAAA,QAAQ,EAAEG,kBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGK,YAPH,CADF,eAUE;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAED,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAVF,CADF,CADF;AA6BD,CAvDD;;AAyDA,eAAeb,YAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ReactComponent as TimesSolid } from './times-solid.svg'\n\nimport { availableColors, capitalize } from '../filters/colors'\nimport {\n  todoColorSelected,\n  todoDeleted,\n  todoToggled,\n  selectTodoById,\n} from './todos/todosSlice'\n\n// Destructure `props.id`, since we just need the ID value\nconst TodoListItem = ({ id }) => {\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector((state) => selectTodoById(state, id))\n  const { text, completed, color } = todo\n\n  const dispatch = useDispatch()\n\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id))\n  }\n\n  const handleColorChanged = (e) => {\n    const color = e.target.value\n    dispatch(todoColorSelected(todo.id, color))\n  }\n\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id))\n  }\n\n  const colorOptions = availableColors.map((c) => (\n    <option key={c} value={c}>\n      {capitalize(c)}\n    </option>\n  ))\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"segment label\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={handleCompletedChanged}\n          />\n          <div className=\"todo-text\">{text}</div>\n        </div>\n        <div className=\"segment buttons\">\n          <select\n            className=\"colorPicker\"\n            value={color}\n            style={{ color }}\n            onChange={handleColorChanged}\n          >\n            <option value=\"\"></option>\n            {colorOptions}\n          </select>\n          <button className=\"destroy\" onClick={onDelete}>\n            <TimesSolid />\n          </button>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default TodoListItem\n"]},"metadata":{},"sourceType":"module"}