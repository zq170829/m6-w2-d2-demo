{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const StatusFilters = {\n  All: 'all',\n  Active: 'active',\n  Completed: 'completed'\n};\nconst initialState = {\n  status: StatusFilters.All,\n  colors: []\n};\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    statusFilterChanged(state, action) {\n      state.status = action.payload;\n    },\n\n    colorFilterChanged: {\n      reducer(state, action) {\n        let {\n          color,\n          changeType\n        } = action.payload;\n        const {\n          colors\n        } = state;\n\n        switch (changeType) {\n          case 'added':\n            {\n              if (!colors.includes(color)) {\n                colors.push(color);\n              }\n\n              break;\n            }\n\n          case 'removed':\n            {\n              state.colors = colors.filter(existingColor => existingColor !== color);\n            }\n\n          default:\n            return;\n        }\n      },\n\n      prepare(color, changeType) {\n        return {\n          payload: {\n            color,\n            changeType\n          }\n        };\n      }\n\n    }\n  }\n});\nexport const {\n  colorFilterChanged,\n  statusFilterChanged\n} = filtersSlice.actions;\nexport default filtersSlice.reducer;","map":{"version":3,"sources":["/Users/qizhang/Desktop/westcliff/m6-w2-d2-demo/src/features/filters/filtersSlice.js"],"names":["createSlice","StatusFilters","All","Active","Completed","initialState","status","colors","filtersSlice","name","reducers","statusFilterChanged","state","action","payload","colorFilterChanged","reducer","color","changeType","includes","push","filter","existingColor","prepare","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,MAAM,EAAE,QAFmB;AAG3BC,EAAAA,SAAS,EAAE;AAHgB,CAAtB;AAMP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAEL,aAAa,CAACC,GADH;AAEnBK,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,MAAMC,YAAY,GAAGR,WAAW,CAAC;AAC/BS,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACjCD,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACC,OAAtB;AACD,KAHO;;AAIRC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,OAAO,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAI;AAAEI,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAwBL,MAAM,CAACC,OAAnC;AACA,cAAM;AAAEP,UAAAA;AAAF,YAAaK,KAAnB;;AACA,gBAAQM,UAAR;AACE,eAAK,OAAL;AAAc;AACZ,kBAAI,CAACX,MAAM,CAACY,QAAP,CAAgBF,KAAhB,CAAL,EAA6B;AAC3BV,gBAAAA,MAAM,CAACa,IAAP,CAAYH,KAAZ;AACD;;AACD;AACD;;AACD,eAAK,SAAL;AAAgB;AACdL,cAAAA,KAAK,CAACL,MAAN,GAAeA,MAAM,CAACc,MAAP,CACZC,aAAD,IAAmBA,aAAa,KAAKL,KADxB,CAAf;AAGD;;AACD;AACE;AAbJ;AAeD,OAnBiB;;AAoBlBM,MAAAA,OAAO,CAACN,KAAD,EAAQC,UAAR,EAAoB;AACzB,eAAO;AACLJ,UAAAA,OAAO,EAAE;AAAEG,YAAAA,KAAF;AAASC,YAAAA;AAAT;AADJ,SAAP;AAGD;;AAxBiB;AAJZ;AAHqB,CAAD,CAAhC;AAoCA,OAAO,MAAM;AAAEH,EAAAA,kBAAF;AAAsBJ,EAAAA;AAAtB,IAA8CH,YAAY,CAACgB,OAAjE;AAEP,eAAehB,YAAY,CAACQ,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const StatusFilters = {\n  All: 'all',\n  Active: 'active',\n  Completed: 'completed',\n}\n\nconst initialState = {\n  status: StatusFilters.All,\n  colors: [],\n}\n\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    statusFilterChanged(state, action) {\n      state.status = action.payload\n    },\n    colorFilterChanged: {\n      reducer(state, action) {\n        let { color, changeType } = action.payload\n        const { colors } = state\n        switch (changeType) {\n          case 'added': {\n            if (!colors.includes(color)) {\n              colors.push(color)\n            }\n            break\n          }\n          case 'removed': {\n            state.colors = colors.filter(\n              (existingColor) => existingColor !== color\n            )\n          }\n          default:\n            return\n        }\n      },\n      prepare(color, changeType) {\n        return {\n          payload: { color, changeType },\n        }\n      },\n    },\n  },\n})\n\nexport const { colorFilterChanged, statusFilterChanged } = filtersSlice.actions\n\nexport default filtersSlice.reducer\n"]},"metadata":{},"sourceType":"module"}